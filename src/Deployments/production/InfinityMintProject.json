{
  "address": "0xfa444422dE1cF3575d8920C958fE14c6b860b37E",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "changee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "PermissionChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "TransferedOwnership",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTag",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProject",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUpdates",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "updates",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isAuthenticated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "multiApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "project",
          "type": "bytes"
        }
      ],
      "name": "setInitialProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setPrivilages",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        }
      ],
      "name": "setVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "project",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "tag",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "setAsCurrentVersion",
          "type": "bool"
        }
      ],
      "name": "updateProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x39f200d8b6e27c3889412142b3154fef040db16b3f4ab992a7f961a0dd168cfa",
  "receipt": {
    "to": null,
    "from": "0x527738Dd42170065d778C89264654b03f8Ed989B",
    "contractAddress": "0xfa444422dE1cF3575d8920C958fE14c6b860b37E",
    "transactionIndex": 221,
    "gasUsed": "1120413",
    "logsBloom": "0x
    "blockHash": "0x439d730e29455c1bb050d6932e7facd041299860d0013780ac6c642c99eb6de1",
    "transactionHash": "0x39f200d8b6e27c3889412142b3154fef040db16b3f4ab992a7f961a0dd168cfa",
    "logs": [
      {
        "transactionIndex": 221,
        "blockNumber": 39045808,
        "transactionHash": "0x39f200d8b6e27c3889412142b3154fef040db16b3f4ab992a7f961a0dd168cfa",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000527738dd42170065d778c89264654b03f8ed989b",
          "0x000000000000000000000000f0245f6251bef9447a08766b9da2b07b28ad80b0"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000091ab74db5addca0000000000000000000000000000000000000000000000004b900df862432a6200000000000000000000000000000000000000000000017e44bdc775e8c689ee0000000000000000000000000000000000000000000000004afe628386e84c9800000000000000000000000000000000000000000000017e454f72eac42167b8",
        "logIndex": 658,
        "blockHash": "0x439d730e29455c1bb050d6932e7facd041299860d0013780ac6c642c99eb6de1"
      }
    ],
    "blockNumber": 39045808,
    "cumulativeGasUsed": "28666426",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "b0f3f5743d043d6d0147204e57adad5c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"PermissionChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"TransferedOwnership\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTag\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProject\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUpdates\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updates\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isAuthenticated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"multiApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"project\",\"type\":\"bytes\"}],\"name\":\"setInitialProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPrivilages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"setVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"project\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"tag\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"setAsCurrentVersion\",\"type\":\"bool\"}],\"name\":\"updateProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InfinityMintProject.sol\":\"InfinityMintProject\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"contracts/Authentication.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//llydia cross 2021\\npragma solidity ^0.8.0;\\n\\nimport \\\"./InfinityMintObject.sol\\\";\\n\\nabstract contract Authentication {\\n    address public deployer;\\n    /// @notice for re-entry prevention, keeps track of a methods execution count\\n    uint256 private executionCount;\\n\\n    mapping(address => bool) public approved;\\n\\n    constructor() {\\n        deployer = msg.sender;\\n        approved[msg.sender] = true;\\n        executionCount = 0;\\n    }\\n\\n    event PermissionChange(\\n        address indexed sender,\\n        address indexed changee,\\n        bool value\\n    );\\n\\n    event TransferedOwnership(address indexed from, address indexed to);\\n\\n    /// @notice Limits execution of a method to once in the given context.\\n    /// @dev prevents re-entry attack\\n    modifier onlyOnce() {\\n        executionCount += 1;\\n        uint256 localCounter = executionCount;\\n        _;\\n        require(localCounter == executionCount);\\n    }\\n\\n    modifier onlyDeployer() {\\n        require(deployer == msg.sender, \\\"not deployer\\\");\\n        _;\\n    }\\n\\n    modifier onlyApproved() {\\n        require(deployer == msg.sender || approved[msg.sender], \\\"not approved\\\");\\n        _;\\n    }\\n\\n    function setPrivilages(address addr, bool value) public onlyDeployer {\\n        require(addr != deployer, \\\"cannot modify deployer\\\");\\n        approved[addr] = value;\\n\\n        emit PermissionChange(msg.sender, addr, value);\\n    }\\n\\n    function multiApprove(address[] memory addrs) public onlyDeployer {\\n        require(addrs.length != 0);\\n        for (uint256 i = 0; i < addrs.length; ) {\\n            approved[addrs[i]] = true;\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function isAuthenticated(address addr) external view returns (bool) {\\n        return addr == deployer || approved[addr];\\n    }\\n\\n    function transferOwnership(address addr) public onlyDeployer {\\n        approved[deployer] = false;\\n        deployer = addr;\\n        approved[addr] = true;\\n\\n        emit TransferedOwnership(msg.sender, addr);\\n    }\\n}\\n\",\"keccak256\":\"0x0895e5e3736b655a297268b47327827b4de3b5a561af0ee25fca784bdf2d70d1\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintObject.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//llydia cross 2021\\npragma solidity ^0.8.0;\\n\\n//this is implemented by every contract in our system\\nimport \\\"./InfinityMintUtil.sol\\\";\\nimport \\\"./InfinityMintValues.sol\\\";\\n\\nabstract contract InfinityMintObject {\\n    /// @notice The main InfinityMint object, TODO: Work out a way for this to easily be modified\\n    struct InfinityObject {\\n        uint32 pathId;\\n        uint32 pathSize;\\n        uint32 currentTokenId;\\n        address owner;\\n        uint32[] colours;\\n        bytes mintData;\\n        uint32[] assets;\\n        string[] names;\\n        address[] destinations;\\n    }\\n\\n    /// @notice Creates a new struct from arguments\\n    /// @dev Stickers are not set through this, structs cannot be made with sticker contracts already set and have to be set manually\\n    /// @param currentTokenId the tokenId,\\n    /// @param pathId the infinity mint paths id\\n    /// @param pathSize the size of the path (only for vectors)\\n    /// @param assets the assets which make up the token\\n    /// @param names the names of the token, its just the name but split by the splaces.\\n    /// @param colours decimal colours which will be convered to hexadecimal colours\\n    /// @param mintData variable dynamic field which is passed to ERC721 Implementor contracts and used in a lot of dynamic stuff\\n    /// @param _sender aka the owner of the token\\n    /// @param destinations a list of contracts associated with this token\\n    function createInfinityObject(\\n        uint32 currentTokenId,\\n        uint32 pathId,\\n        uint32 pathSize,\\n        uint32[] memory assets,\\n        string[] memory names,\\n        uint32[] memory colours,\\n        bytes memory mintData,\\n        address _sender,\\n        address[] memory destinations\\n    ) internal pure returns (InfinityObject memory) {\\n        return\\n            InfinityObject(\\n                pathId,\\n                pathSize,\\n                currentTokenId,\\n                _sender, //the sender aka owner\\n                colours,\\n                mintData,\\n                assets,\\n                names,\\n                destinations\\n            );\\n    }\\n\\n    /// @notice basically unpacks a return object into bytes.\\n    function encode(InfinityObject memory data)\\n        internal\\n        pure\\n        returns (bytes memory)\\n    {\\n        return\\n            abi.encode(\\n                data.pathId,\\n                data.pathSize,\\n                data.currentTokenId,\\n                data.owner,\\n                abi.encode(data.colours),\\n                data.mintData,\\n                data.assets,\\n                data.names,\\n                data.destinations\\n            );\\n    }\\n\\n    /// @notice Copied behavours of the open zeppelin content due to prevent msg.sender rewrite through assembly\\n    function sender() internal view returns (address) {\\n        return (msg.sender);\\n    }\\n\\n    /// @notice Copied behavours of the open zeppelin content due to prevent msg.sender rewrite through assembly\\n    function value() internal view returns (uint256) {\\n        return (msg.value);\\n    }\\n}\\n\",\"keccak256\":\"0xe47b88d98889304cc2e47c41a78ef5534d33ad9548970524f3b72390d7e08e3a\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintProject.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//llydia cross 2021\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Authentication.sol\\\";\\n\\ncontract InfinityMintProject is InfinityMintObject, Authentication {\\n    mapping(uint256 => bytes) internal projects;\\n    mapping(uint256 => bytes) internal tags;\\n    mapping(bytes => bytes) internal interactions;\\n    uint256 internal nextVersion = 0;\\n    uint256 internal outputVersion = 0;\\n\\n    function getVersions() external view returns (uint256) {\\n        return nextVersion;\\n    }\\n\\n    function getCurrentTag() external view returns (bytes memory) {\\n        return tags[outputVersion];\\n    }\\n\\n    function getCurrentVersion() external view returns (uint256) {\\n        return outputVersion;\\n    }\\n\\n    function setInitialProject(bytes memory project) public onlyDeployer {\\n        require(nextVersion == 0, \\\"initial project already set\\\");\\n        projects[nextVersion] = project;\\n        tags[nextVersion] = \\\"initial\\\";\\n        interactions[\\\"initial\\\"] = abi.encode(\\n            sender(),\\n            block.timestamp,\\n            block.number,\\n            project.length\\n        );\\n        outputVersion = 0;\\n        unchecked {\\n            ++nextVersion;\\n        }\\n    }\\n\\n    function setVersion(uint256 version) public onlyApproved {\\n        require(version < nextVersion && version > 0, \\\"invalid version\\\");\\n        require(projects[version].length != 0, \\\"blank project set\\\");\\n        outputVersion = version;\\n    }\\n\\n    function getProject() external view returns (bytes memory) {\\n        bytes memory result = projects[outputVersion];\\n        if (result.length == 0) return bytes(\\\"{'local':true}\\\"); //try and force local infinity mint mode\\n        return result;\\n    }\\n\\n    function getUpdates() external view returns (bytes[] memory updates) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < nextVersion; ) {\\n            if (tags[i].length != 0 && interactions[tags[i]].length != 0)\\n                count++;\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n        updates = new bytes[](count);\\n        count = 0;\\n        for (uint256 i = 0; i < nextVersion; ) {\\n            if (tags[i].length != 0 && interactions[tags[i]].length != 0)\\n                updates[count++] = interactions[tags[i]];\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function updateProject(\\n        bytes memory project,\\n        bytes memory tag,\\n        bool setAsCurrentVersion\\n    ) public onlyApproved {\\n        require(bytes(project).length != 0, \\\"blank project set\\\");\\n        require(bytes(tag).length != 0, \\\"blank tag set\\\");\\n        require(interactions[tag].length == 0, \\\"tag already set\\\");\\n        require(nextVersion != 0, \\\"initial project not set by deployer\\\");\\n        projects[nextVersion] = project;\\n        tags[nextVersion] = tag;\\n        interactions[tag] = abi.encode(\\n            sender(),\\n            block.timestamp,\\n            block.number,\\n            project.length\\n        );\\n        unchecked {\\n            if (setAsCurrentVersion) outputVersion = nextVersion;\\n            ++nextVersion;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e034d6e13b77e970a8ce8ad039f18f6d5ff2412fa7a769e40eefae4efca0d9c\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintUtil.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//llydia cross 2021\\npragma solidity ^0.8.0;\\n\\nlibrary InfinityMintUtil {\\n    function toString(uint256 _i)\\n        internal\\n        pure\\n        returns (string memory _uintAsString)\\n    {\\n        if (_i == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 j = _i;\\n        uint256 len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n        bytes memory bstr = new bytes(len);\\n        uint256 k = len;\\n        while (_i != 0) {\\n            k = k - 1;\\n            uint8 temp = (48 + uint8(_i - (_i / 10) * 10));\\n            bytes1 b1 = bytes1(temp);\\n            bstr[k] = b1;\\n            _i /= 10;\\n        }\\n        return string(bstr);\\n    }\\n\\n    function filepath(\\n        string memory directory,\\n        string memory file,\\n        string memory extension\\n    ) internal pure returns (string memory) {\\n        return\\n            abi.decode(abi.encodePacked(directory, file, extension), (string));\\n    }\\n\\n    //checks if two strings (or bytes) are equal\\n    function isEqual(bytes memory s1, bytes memory s2)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        bytes memory b1 = bytes(s1);\\n        bytes memory b2 = bytes(s2);\\n        uint256 l1 = b1.length;\\n        if (l1 != b2.length) return false;\\n        for (uint256 i = 0; i < l1; i++) {\\n            //check each byte\\n            if (b1[i] != b2[i]) return false;\\n        }\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x414a2931293db93950726b75c54b8083051b1004291fd70bac069ad5d769bc53\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintValues.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//llydia cross 2021\\npragma solidity ^0.8.0;\\n\\ncontract InfinityMintValues {\\n    mapping(string => uint256) private values;\\n    mapping(string => bool) private booleanValues;\\n    mapping(string => bool) private registeredValues;\\n\\n    address deployer;\\n\\n    constructor() {\\n        deployer = msg.sender;\\n    }\\n\\n    modifier onlyDeployer() {\\n        if (msg.sender != deployer) revert();\\n        _;\\n    }\\n\\n    function setValue(string memory key, uint256 value) public onlyDeployer {\\n        values[key] = value;\\n        registeredValues[key] = true;\\n    }\\n\\n    function setupValues(\\n        string[] memory keys,\\n        uint256[] memory _values,\\n        string[] memory booleanKeys,\\n        bool[] memory _booleanValues\\n    ) public onlyDeployer {\\n        require(keys.length == _values.length);\\n        require(booleanKeys.length == _booleanValues.length);\\n        for (uint256 i = 0; i < keys.length; i++) {\\n            setValue(keys[i], _values[i]);\\n        }\\n\\n        for (uint256 i = 0; i < booleanKeys.length; i++) {\\n            setBooleanValue(booleanKeys[i], _booleanValues[i]);\\n        }\\n    }\\n\\n    function setBooleanValue(string memory key, bool value)\\n        public\\n        onlyDeployer\\n    {\\n        booleanValues[key] = value;\\n        registeredValues[key] = true;\\n    }\\n\\n    function isTrue(string memory key) external view returns (bool) {\\n        return booleanValues[key];\\n    }\\n\\n    function getValue(string memory key) external view returns (uint256) {\\n        if (!registeredValues[key]) revert(\\\"Invalid Value\\\");\\n\\n        return values[key];\\n    }\\n\\n    /// @dev Default value it returns is zero\\n    function tryGetValue(string memory key) external view returns (uint256) {\\n        if (!registeredValues[key]) return 0;\\n\\n        return values[key];\\n    }\\n}\\n\",\"keccak256\":\"0xa3df569a4c7a710808d576eb4608fd23656a38ab04fb2288a5cc341d9d65c78a\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60806040526000600655600060075534801561001a57600080fd5b50600080546001600160a01b0319163390811782558152600260205260408120805460ff191660019081179091555561125e806100586000396000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c80630b98a032146100bf57806310a8c7a9146100d4578063408def1e146100e75780634e275bcb146100fa5780636d0cc895146101185780636e57b7001461012a578063a8a1d27314610132578063c13a474414610147578063d15d41501461015a578063d5f394881461017d578063d8b964e6146101a8578063f2fde38b146101cb578063fabec44a146101de578063fe684c0e146101e6575b600080fd5b6100d26100cd366004610da8565b6101f9565b005b6100d26100e2366004610e32565b610420565b6100d26100f5366004610ede565b6104b7565b610102610588565b60405161010f9190610f53565b60405180910390f35b6006545b60405190815260200161010f565b61010261062b565b61013a610705565b60405161010f9190610f6d565b6100d2610155366004610fcf565b61093f565b61016d61016836600461100b565b610a8d565b604051901515815260200161010f565b600054610190906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b61016d6101b636600461100b565b60026020526000908152604090205460ff1681565b6100d26101d936600461100b565b610ac8565b60075461011c565b6100d26101f4366004611026565b610b68565b6000546001600160a01b031633148061022157503360009081526002602052604090205460ff165b6102465760405162461bcd60e51b815260040161023d90611059565b60405180910390fd5b82516102645760405162461bcd60e51b815260040161023d9061107f565b81516102a25760405162461bcd60e51b815260206004820152600d60248201526c189b185b9ac81d1859c81cd95d609a1b604482015260640161023d565b6005826040516102b291906110aa565b908152602001604051809103902080546102cb906110c6565b15905061030c5760405162461bcd60e51b815260206004820152600f60248201526e1d1859c8185b1c9958591e481cd95d608a1b604482015260640161023d565b6006546103675760405162461bcd60e51b815260206004820152602360248201527f696e697469616c2070726f6a656374206e6f7420736574206279206465706c6f6044820152623cb2b960e91b606482015260840161023d565b6006546000908152600360209081526040909120845161038992860190610c4a565b50600654600090815260046020908152604090912083516103ac92850190610c4a565b5082516040516103c491339142914391602001611101565b6040516020818303038152906040526005836040516103e391906110aa565b90815260200160405180910390209080519060200190610404929190610c4a565b508015610412576006546007555b505060068054600101905550565b6000546001600160a01b0316331461044a5760405162461bcd60e51b815260040161023d90611127565b805161045557600080fd5b60005b81518110156104b3576001600260008484815181106104795761047961114d565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610458565b5050565b6000546001600160a01b03163314806104df57503360009081526002602052604090205460ff165b6104fb5760405162461bcd60e51b815260040161023d90611059565b6006548110801561050c5750600081115b61054a5760405162461bcd60e51b815260206004820152600f60248201526e34b73b30b634b2103b32b939b4b7b760891b604482015260640161023d565b60008181526003602052604090208054610563906110c6565b151590506105835760405162461bcd60e51b815260040161023d9061107f565b600755565b60075460009081526004602052604090208054606091906105a8906110c6565b80601f01602080910402602001604051908101604052809291908181526020018280546105d4906110c6565b80156106215780601f106105f657610100808354040283529160200191610621565b820191906000526020600020905b81548152906001019060200180831161060457829003601f168201915b5050505050905090565b60075460009081526003602052604081208054606092919061064c906110c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610678906110c6565b80156106c55780601f1061069a576101008083540402835291602001916106c5565b820191906000526020600020905b8154815290600101906020018083116106a857829003601f168201915b5050505050905080516000141561070057505060408051808201909152600e81526d7b276c6f63616c273a747275657d60901b602082015290565b919050565b60606000805b60065481101561078f576000818152600460205260409020805461072e906110c6565b1580159150610774575060008181526004602052604090819020905160059161075691611163565b9081526020016040518091039020805461076f906110c6565b151590505b156107875781610783816111ff565b9250505b60010161070b565b50806001600160401b038111156107a8576107a8610ce3565b6040519080825280602002602001820160405280156107db57816020015b60608152602001906001900390816107c65790505b5091506000905060005b60065481101561093a5760008181526004602052604090208054610808906110c6565b158015915061084e575060008181526004602052604090819020905160059161083091611163565b90815260200160405180910390208054610849906110c6565b151590505b156109325760008181526004602052604090819020905160059161087191611163565b9081526020016040518091039020805461088a906110c6565b80601f01602080910402602001604051908101604052809291908181526020018280546108b6906110c6565b80156109035780601f106108d857610100808354040283529160200191610903565b820191906000526020600020905b8154815290600101906020018083116108e657829003601f168201915b5050505050838380610914906111ff565b9450815181106109265761092661114d565b60200260200101819052505b6001016107e5565b505090565b6000546001600160a01b031633146109695760405162461bcd60e51b815260040161023d90611127565b600654156109b75760405162461bcd60e51b815260206004820152601b60248201527a1a5b9a5d1a585b081c1c9bda9958dd08185b1c9958591e481cd95d602a1b604482015260640161023d565b600654600090815260036020908152604090912082516109d992840190610c4a565b5060408051808201825260078152661a5b9a5d1a585b60ca1b602080830191825260065460009081526004909152929092209051610a179290610c4a565b508051604051610a2f91339142914391602001611101565b6040516020818303038152906040526005604051610a5a90661a5b9a5d1a585b60ca1b815260070190565b90815260200160405180910390209080519060200190610a7b929190610c4a565b50506000600755600680546001019055565b600080546001600160a01b0383811691161480610ac257506001600160a01b03821660009081526002602052604090205460ff165b92915050565b6000546001600160a01b03163314610af25760405162461bcd60e51b815260040161023d90611127565b600080546001600160a01b03908116825260026020526040808320805460ff1990811690915583546001600160a01b03191692851692831784558284528184208054909116600117905551909133917f93091b3f3cd424efabc74e181f3799f3476ed758412561ed3b29515c51f567529190a350565b6000546001600160a01b03163314610b925760405162461bcd60e51b815260040161023d90611127565b6000546001600160a01b0383811691161415610be95760405162461bcd60e51b815260206004820152601660248201527531b0b73737ba1036b7b234b33c903232b83637bcb2b960511b604482015260640161023d565b6001600160a01b038216600081815260026020908152604091829020805460ff1916851515908117909155915191825233917ff38de818d000d07d091732dd783c6855722d7bc1934d92b7635133289d341695910160405180910390a35050565b828054610c56906110c6565b90600052602060002090601f016020900481019282610c785760008555610cbe565b82601f10610c9157805160ff1916838001178555610cbe565b82800160010185558215610cbe579182015b82811115610cbe578251825591602001919060010190610ca3565b50610cca929150610cce565b5090565b5b80821115610cca5760008155600101610ccf565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610d2157610d21610ce3565b604052919050565b600082601f830112610d3a57600080fd5b81356001600160401b03811115610d5357610d53610ce3565b610d66601f8201601f1916602001610cf9565b818152846020838601011115610d7b57600080fd5b816020850160208301376000918101602001919091529392505050565b8035801515811461070057600080fd5b600080600060608486031215610dbd57600080fd5b83356001600160401b0380821115610dd457600080fd5b610de087838801610d29565b94506020860135915080821115610df657600080fd5b50610e0386828701610d29565b925050610e1260408501610d98565b90509250925092565b80356001600160a01b038116811461070057600080fd5b60006020808385031215610e4557600080fd5b82356001600160401b0380821115610e5c57600080fd5b818501915085601f830112610e7057600080fd5b813581811115610e8257610e82610ce3565b8060051b9150610e93848301610cf9565b8181529183018401918481019088841115610ead57600080fd5b938501935b83851015610ed257610ec385610e1b565b82529385019390850190610eb2565b98975050505050505050565b600060208284031215610ef057600080fd5b5035919050565b60005b83811015610f12578181015183820152602001610efa565b83811115610f21576000848401525b50505050565b60008151808452610f3f816020860160208601610ef7565b601f01601f19169290920160200192915050565b602081526000610f666020830184610f27565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610fc257603f19888603018452610fb0858351610f27565b94509285019290850190600101610f94565b5092979650505050505050565b600060208284031215610fe157600080fd5b81356001600160401b03811115610ff757600080fd5b61100384828501610d29565b949350505050565b60006020828403121561101d57600080fd5b610f6682610e1b565b6000806040838503121561103957600080fd5b61104283610e1b565b915061105060208401610d98565b90509250929050565b6020808252600c908201526b1b9bdd08185c1c1c9bdd995960a21b604082015260600190565b602080825260119082015270189b185b9ac81c1c9bda9958dd081cd95d607a1b604082015260600190565b600082516110bc818460208701610ef7565b9190910192915050565b600181811c908216806110da57607f821691505b602082108114156110fb57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b6020808252600c908201526b3737ba103232b83637bcb2b960a11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600080835481600182811c91508083168061117f57607f831692505b602080841082141561119f57634e487b7160e01b86526022600452602486fd5b8180156111b357600181146111c4576111f1565b60ff198616895284890196506111f1565b60008a81526020902060005b868110156111e95781548b8201529085019083016111d0565b505084890196505b509498975050505050505050565b600060001982141561122157634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220fa458d84069509b190735f4ec8cdad67b6cd1dcb76f34a82793faea1c28d608764736f6c634300080c0033",
  "deployedBytecode": "",
  "libraries": {
    "InfinityMintUtil": "0xd7fcAa6A3e68e4eDAb6eA551594cF60CCe436F73"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 458,
        "contract": "contracts/InfinityMintProject.sol:InfinityMintProject",
        "label": "deployer",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 461,
        "contract": "contracts/InfinityMintProject.sol:InfinityMintProject",
        "label": "executionCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 465,
        "contract": "contracts/InfinityMintProject.sol:InfinityMintProject",
        "label": "approved",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 5713,
        "contract": "contracts/InfinityMintProject.sol:InfinityMintProject",
        "label": "projects",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_bytes_storage)"
      },
      {
        "astId": 5717,
        "contract": "contracts/InfinityMintProject.sol:InfinityMintProject",
        "label": "tags",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_bytes_storage)"
      },
      {
        "astId": 5721,
        "contract": "contracts/InfinityMintProject.sol:InfinityMintProject",
        "label": "interactions",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes_memory_ptr,t_bytes_storage)"
      },
      {
        "astId": 5724,
        "contract": "contracts/InfinityMintProject.sol:InfinityMintProject",
        "label": "nextVersion",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 5727,
        "contract": "contracts/InfinityMintProject.sol:InfinityMintProject",
        "label": "outputVersion",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_memory_ptr": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes_memory_ptr,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_bytes_memory_ptr",
        "label": "mapping(bytes => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_mapping(t_uint256,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}